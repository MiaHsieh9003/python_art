Ctrl + Shift + P → Reopen folder in WSL

//compile .pyx into .h
python3 -m cython src/SK-RM/art_skrm.pyx    //-m meaning is use module
or 
cython -3 src/SK-RM/art_skrm.pyx
cython --embed src/SK-RM/art_skrm.pyx   #產生正確的.h檔
 --cplus --output-file=src/SK-RM/art_skrm.cpp
readme步驟:
pip install -e ./    //即時反映pyart修改
pip install . --user

/*
清除 build 資料
python3 setup.py clean --all
rm -rf build/ pyart/*.so
pip install . --user
*/

//若改了執行path，則須編輯 .vscode/c_cpp_properties.json，改"name": "WSL"
pip install pyart

python3 setup.py build_ext --inplace    #build_ext: build extensions

/*
* rm -rf .tox/    //重新清除tox, -r recursive, -f force
* python3 -m tox
 若有d槽錯誤Permission denied: '/mnt/d/lab/ART-in-word-based/pyart/.tox/.pkg/.meta/pyart.egg-info.__bkp__'    // mnt/d 目錄經常會有 不支援 POSIX 權限的問題
* 可以搬到 WSL 本地磁碟（~/）避免這些問題，讓編譯與測試更穩定，以下為方法
* cp -r /mnt/d/lab/ART-in-word-based ~/ART-in-word-based    //cp:copy, -r：recursive, /mnt/d/lab/ART-in-word-based: from, ~/ART-in-word-based: target, 將專案移出 /mnt/d
* cd ~/ART-in-word-based/pyart    // 進入剛剛複製過來的專案中的 pyart 子資料夾, 其中: /home/你的帳號/ART-in-word-based/ = ~/ART-in-word-based/
* python3 -m tox
*/
valgrind --leak-check=full python3 -m nose2 pyart.tests

python3 -m nose2 pyart.tests

python3 -m nose2 pyart.tests.test_tree.TestTree.test_big_iter

Ctrl + Shift + P → C/C++: Edit Configurations (UI) => 編輯c_cpp_properties.json

gdb
/*
gdb --args python3 -m nose2 pyart.tests
(gdb) run
*/



